ROUTINE AoC2020Day5

/// key takeaways: easy to find gap in continuous interval in both ordered/unordered hash sets if you know the max
///                too lazy to do binary search for gap, but that would be faster asymptotically
///                noticing the multiplying by 8 stuff was unneeded, could translate input into binary right away
///                since 8 = 2**3 = number governing seats
Start() PUBLIC {
	s input="/irisdev/app/inputs/2020/input5.txt"
	d readInput(input, .nums)
	
	s i = ""
	s prev = $o(nums(""), -1) + 1
	s part2 = 0
	for {
		s i = $o(nums(i), -1)
		if i="" quit
		
		if i '= (prev - 1) {
			quit
		}
		s prev = prev - 1
	}
	s p1 = $o(nums(""), -1)
	s p2 = prev - 1
	return p1_"^"_p2
}

getBase10(a, b) PUBLIC {
	s c = 0
	for i=1:1:$length(a) {
		s c = c * b
		s c = c + $extract(a, i)
	}
	quit c
}

readInput(input, result) PUBLIC {
	set file = ##class(%Stream.FileCharacter).%New()
	s sc = file.LinkToFile(input)
	s i = 1
	while 'file.AtEnd {
		s curr = file.ReadLine()
		if $extract(curr, *) = $c(13) s curr = $extract(curr, 1, *-1)
		s v = $translate(curr, "FBLR", "0101")
	 	s v = $$getBase10(v, 2)
		s result(v) = ""
		if v = 999 zw curr
	}
}


