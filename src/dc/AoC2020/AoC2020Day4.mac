ROUTINE AoC2020Day4

/// key takeaways: be even better are parsing data, notice we can safely ignore "cid" while parsing
Start() PUBLIC {
	s input="/irisdev/app/inputs/2020/input4.txt"
	d readInput(input, .nums)

	s pid = ""
	s count1 = 0
	s count2 = 0
	for {
		s pid = $o(nums(pid))
		if 'pid quit
		
		s field = ""
		s c = 0
		s cid = 0
		s allowed = 1
		for {
			s field = $o(nums(pid, field), 1, targ)
			if field="" quit
			
			s c = c + 1		
			
			if field = "byr" && ((targ < 1920) || (targ > 2002)) s allowed = 0
			if field = "iyr" && ((targ < 2010) || (targ > 2020)) s allowed = 0
			if field = "eyr" && ((targ < 2020) || (targ > 2030)) s allowed = 0
			if field = "ecl" && ($listfind($lb("amb", "blu", "brn", "gry", "grn", "hzl", "oth"), targ) = 0) s allowed = 0
			if field = "hgt" {
				s hgtu = $extract(targ, *-1, *)
				s hgtv = $extract(targ, 1, *-2)
				if hgtu = "cm" && ((hgtv < 150) || (hgtv > 193)) {
					s allowed = 0
				} elseif hgtu = "in" && ((hgtv < 59) || (hgtv > 76)) {
					s allowed = 0
				} elseif (hgtu '= "cm") && (hgtu '= "in") {
					s allowed = 0
				}
			}
			if field = "hcl" && '$match(targ, "\#[0-9a-f]{6}") s allowed = 0
			if field = "pid" && '$match(targ, "[0-9]{9}") s allowed = 0
		}
		if c=7 s count1 = count1 + 1
		if (c=7) && allowed s count2 = count2 + 1
	}
	return count1_"^"_count2
}

readInput(input, result) PUBLIC {
	set file = ##class(%Stream.FileCharacter).%New()
	s sc = file.LinkToFile(input)
	s i = 1

	s data = $listfromstring(file.Read(), $c(13, 10))
	s ptr = 0
	
	while $listnext(data, ptr, curr) {
		if curr = "" {
			s i = i+1
			continue
		}
		s cl = $listfromstring(curr, " ")
		s p = 0
		
		while $listnext(cl, p, v) {
			s a = $p(v, ":")
			s b = $p(v, ":", 2)
			if a'="cid" s result(i, a) = b
		}
	}
}