ROUTINE AoC2021Day22

Start() public {
	d readInput("/irisdev/app/inputs/2021/22.in", .c)

    return $$p1(.c)_"^"_$$p2(.c)
}

min(a, b) public {
	if a > b return b
	return a
}

max(a, b) public {
	if a > b return a
	return b
}

p1(c) public {
	s m = 0
	for i=1:1:c {
		s l = c(i)
		s on = $p(l, " ")
		s lx = $p($p(l, " ", 2), "..", 1), hx = $p($p(l, " ", 2), "..", 2)
		s ly = $p($p(l, " ", 3), "..", 1), hy = $p($p(l, " ", 3), "..", 2)
		s lz = $p($p(l, " ", 4), "..", 1), hz = $p($p(l, " ", 4), "..", 2)
		for x=$$max(lx, -50):1:$$min(hx, 50) {
			for y=$$max(ly, -50):1:$$min(hy, 50) {
				for z=$$max(lz, -50):1:$$min(hz, 50) {
					if on {
						s m(x_" "_y_" "_z) = ""
					} else {
						k m(x_" "_y_" "_z)
					}
				}
			}
		}
	}
	s t = 0
	s co = ""
	for {
		s co = $o(m(co))
		if co = "" q

		s t = t+1
	}
	return t
}

key(lx, hx, ly, hy, lz, hz) PUBLIC {
	return lx_" "_hx_" "_ly_" "_hy_" "_lz_" "_hz
}

ok(lx, hx, ly, hy, lz, hz, m) PUBLIC {
	if (lx <= hx) && (ly <= hy) && (lz <= hz) {
		s m($$key(lx, hx, ly, hy, lz, hz)) = ""
	}
}

split(c1, c2, m) {
	s lx1=$p(c1, " ", 1), hx1=$p(c1, " ", 2)
	s ly1=$p(c1, " ", 3), hy1=$p(c1, " ", 4)
	s lz1=$p(c1, " ", 5), hz1=$p(c1, " ", 6)

	s lx2=$p(c2, " ", 1), hx2=$p(c2, " ", 2)
	s ly2=$p(c2, " ", 3), hy2=$p(c2, " ", 4)
	s lz2=$p(c2, " ", 5), hz2=$p(c2, " ", 6)
	
	if (lx1 > hx2) || (lx2 > hx1) || (ly1 > hy2) || (ly2 > hy1) || (lz1 > hz2) || (lz2 > hz1) {
		s m(c1) = ""
		return
	}

	s ilx=$$max(lx1, lx2), ihx=$$min(hx1, hx2)
	s ily=$$max(ly1, ly2), ihy=$$min(hy1, hy2)
	s ilz=$$max(lz1, lz2), ihz=$$min(hz1, hz2)
	s int = $$key(ilx, ihx, ily, ihy, ilz, ihz)

	#; left and right
	d ok(lx1, ilx-1, ly1, hy1, lz1, hz1, .m)
	d ok(ihx+1, hx1, ly1, hy1, lz1, hz1, .m)
	#; top and bottom
	d ok(ilx, ihx, ly1, hy1, lz1, ilz-1, .m)
	d ok(ilx, ihx, ly1, hy1, ihz+1, hz1, .m)
	#; front and back
	d ok(ilx, ihx, ly1, ily-1, ilz, ihz, .m)
	d ok(ilx, ihx, ihy+1, hy1, ilz, ihz, .m)
}

vol(c) public {
	s lx=$p(c, " ", 1), hx=$p(c, " ", 2)
	s ly=$p(c, " ", 3), hy=$p(c, " ", 4)
	s lz=$p(c, " ", 5), hz=$p(c, " ", 6)
	return (hx-lx+1)*(hy-ly+1)*(hz-lz+1)
}

p2(x) public {
	for i=1:1:x {
		k nm
		s l = x(i)
		s on = $p(l, " ")
		s lx = $p($p(l, " ", 2), "..", 1), hx = $p($p(l, " ", 2), "..", 2)
		s ly = $p($p(l, " ", 3), "..", 1), hy = $p($p(l, " ", 3), "..", 2)
		s lz = $p($p(l, " ", 4), "..", 1), hz = $p($p(l, " ", 4), "..", 2)
		s cc = $$key(lx, hx, ly, hy, lz, hz)
		s oc = ""
		for {
			s oc = $o(m(oc))
			if oc = "" q

			d split(oc, cc, .nm)
		}
		if on s nm(cc) = ""
		k m
		m m = nm
		
	}
	s t = 0
	s co = ""
	for {
		s co = $o(m(co))
		if co = "" q

		s t = t + $$vol(co)
	}
	return t
}

readInput(input, result) PUBLIC {
	set file = ##class(%Stream.FileCharacter).%New()
	s sc = file.LinkToFile(input)
	s i = 0
	while 'file.AtEnd {
		s i = i+1
		s line = $translate(file.ReadLine(), $c(13))
		s result(i) = $p(line, " ")="on"
		s coord = $p(line, " ", 2)
		
		for j=1:1:3 {
			s result(i) = result(i)_" "_$p($p(coord, ",", j), "=", 2)
		}
	}
	s result = i
}