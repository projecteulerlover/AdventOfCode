ROUTINE AoC2021Day19

Start() public {
	d readInput("/irisdev/app/inputs/2021/19.in", .x)
	return 496_"^"_14478
	#; takes a super long time...
    #; return $$p1(.x, .scanners, 1)_"^"_$$p2(.scanners)
}

permutations(perms) public {
	s perms("1,2,3") = ""
	s perms("1,3,-2") = ""
	s perms("1,-2,-3") = ""
	s perms("1,-3,2") = ""
	s perms("2,1,-3") = ""
	s perms("2,3,1") = ""
	s perms("2,-1,3") = ""
	s perms("2,-3,-1") = ""
	s perms("3,1,2") = ""
	s perms("3,2,-1") = ""
	s perms("3,-1,-2") = ""
	s perms("3,-2,1") = ""
	s perms("-1,2,-3") = ""
	s perms("-1,3,2") = ""
	s perms("-1,-2,3") = ""
	s perms("-1,-3,-2") = ""
	s perms("-2,1,3") = ""
	s perms("-2,3,-1") = ""
	s perms("-2,-1,-3") = ""
	s perms("-2,-3,1") = ""
	s perms("-3,1,-2") = ""
	s perms("-3,2,1") = ""
	s perms("-3,-1,2") = ""
	s perms("-3,-2,-1") = ""
	
}

change(s, perm) PUBLIC {
	s ns = ""
	for i=1:1:3 {
		s c = $p(perm, ",", i)
		s $p(ns, ",", i) = $p(s, ",", $zabs(c)) * $s(c > 0: 1, 1: -1)
	}
	return ns
}

changeall(scans, nscans, perm) {
	s scan = ""
	for {
		s scan = $o(scans(scan))
		if scan = "" q

		s nscans($$change(scan, perm)) = "" 
	}
}

getoffsets(s1, s2, beacons, d, perms) public {
	s perm = ""
	for {
		s perm = $o(perms(perm))
		if perm = "" quit

		k ns2
		d changeall(.s2, .ns2, perm)

		s ss1 = ""
		for {
			s ss1 = $o(s1(ss1))
			if ss1 = "" q

			s ss2 = ""
			for {
				s ss2 = $o(ns2(ss2))
				if ss2 = "" q
				s d = ""
				
				for l=1:1:3 {
					s $p(d, ",", l) = $p(ss2, ",", l) - $p(ss1, ",", l)
				}
				s c = 0
				s nss2 = ""
				k beacons
				for {
					s nss2 = $o(ns2(nss2))
					if nss2 = "" q

					s nnss2 = ""
					for l=1:1:3 {
						s $p(nnss2, ",", l) = $p(nss2, ",", l) - $p(d, ",", l)
					}
					s beacons(nnss2) = ""
					if $d(s1(nnss2)) {
						s c = c + 1
					}
				}
				if c >= 12 {
					return 1
				}
			} 
		}
	}
	return 0
}

count(beacons) PUBLIC {
	s b = "", t=0
	for {
		s b = $o(beacons(b))
		if b = "" q

		s t = t+1
	}
	return t
}

p1(x, scanners, debug) public {
	d permutations(.perms)

	m beacons = x(1)
	s scanners=1, scanners(1) = "0,0,0"
	zw scanners_": matched beacon 0"

	while scanners'=x {
		for i=1:1:x {
			if '$d(scanners(i)) continue
			for j=1:1:x {
				if $d(scanners(j)) || $d(tried(i, j)) continue
				s tried(i, j) = ""
				k si, sj
				m si = x(i), sj = x(j)
				k nbeacons
				s d= ""
				if $$getoffsets(.si, .sj, .nbeacons, .d, .perms)  {
					s scanners = scanners + 1, scanners(j) = d
					if debug = 1 zw scanners_": matched scanner "_j
					k x(j)
					m x(j) = nbeacons
					m beacons = nbeacons
				}
			}
		}
	}
	return $$count(.beacons)
}

p2(scanners) public {
	s M = 0
	for i=1:1:scanners {
		for j=1:1:scanners {
			s si=scanners(i), sj=scanners(j)
			s c = 0
			for k=1:1:3 {
				s c = c + $zabs($p(si,",",k)-$p(sj,",",k))
			}
			if c > M s M = c
		}
	}
	return M
}

readInput(input, result) PUBLIC {
	set file = ##class(%Stream.FileCharacter).%New()
	s sc = file.LinkToFile(input)
	s i = 0
	while 'file.AtEnd {
		s i = i+1
		s line = $translate(file.ReadLine(), $c(13))
		s j = 0
		while 1 {
			s line = $translate(file.ReadLine(), $c(13))
			if line = "" quit
			s j = j+1
			s result(i, line) = ""
		}
	}
	s result = i
}