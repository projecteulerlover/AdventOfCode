ROUTINE AoC2021Day16

Start() public {
	d readInput("/irisdev/app/inputs/2021/16.in", .x)

    return $$p1(x)_"^"_$$p2(x)
}

b10(x) public {
	s c = 0
	for i=1:1:$l(x) {
		s c = 2**($l(x)-i) * $e(x, i) + c
	}
	return c
}

#; idea: consume prefix packets repeatedly.
p1helper(x, sum) public {
	s V = $$b10($e(x, 1, 3))
	s x = $e(x, 4, *)
	s T = $$b10($e(x, 1, 3))
	s x = $e(x, 4, *)
	s sum = sum + V

	if T = 4 {
		s n = ""
		while 1 {
			s n = n_$e(x, 2, 5)
			s more = $e(x, 1)
			s x = $e(x, 6, *)
			if 'more q
		}
	}
	else {
		s I = $e(x, 1)
		s x = $e(x, 2, *)

		s c = $s(I: 11, 1:15)
		s L = $$b10($e(x, 1, c))
		s x = $e(x, c+1, *)

		if I {
			for i=1:1:L {
				d p1helper(.x, .sum)
			}
		} else {
			s y = $e(x, 1, L), x = $e(x, L+1, *)
			while y {
				d p1helper(.y, .sum)
			}
		}
	}
}

p1(x) public {
	s sum = 0
	d p1helper(.x, .sum)
	return sum
}

op(o, ns) public {
	if o=0 {
		s p = 0
		for i=1:1:$l(ns, " ") {
			s p = p + $p(ns, " ", i)
		}
		return p
	}
	elseif o=1 {
		s t = 1
		for i=1:1:$l(ns, " ") {
			s t = t*$p(ns, " ", i)
		}
		return t
	}
	elseif o=2 {
		s m = 1e30
		for i=1:1:$l(ns, " ") {
			if m > $p(ns, " ", i) s m = $p(ns, " ", i)
		}
		return m
	}
	elseif o=3 {
		s M = 0
		for i=1:1:$l(ns, " ") {
			if M < $p(ns, " ", i) s M = $p(ns, " ", i)
		}
		return M
	}
	elseif o=5 {
		s a=$p(ns, " ", 1), b=$p(ns, " ", 2)
		return a > b
	}
	elseif o=6 {
		s a=$p(ns, " ", 1), b=$p(ns, " ", 2)
		return a < b
	}
	elseif o=7 {
		s a=$p(ns, " ", 1), b=$p(ns, " ", 2)
		return a=b
	}
	zw "very very bad"
}

p2helper(x, calc) public {
	s V = $$b10($e(x, 1, 3))
	s x = $e(x, 4, *)
	s T = $$b10($e(x, 1, 3))
	s x = $e(x, 4, *)

	if T = 4 {
		s n = ""
		while 1 {
			s n = n_$e(x, 2, 5)
			s more = $e(x, 1)
			s x = $e(x, 6, *)
			if 'more q
		}
		s calc = $$b10(n)
		return x
	}
	else {
		s I = $e(x, 1)
		s x = $e(x, 2, *)

		s c = $s(I: 11, 1:15)
		s L = $$b10($e(x, 1, c))
		s x = $e(x, c+1, *)

		s ns = ""
		if I {
			for i=1:1:L {
				d p2helper(.x, .calc)
				s ns = ns_$s(ns="": "", 1: " ")_calc
			}
		} else {
			s y = $e(x, 1, L), x = $e(x, L+1, *)
			while y {
				d p2helper(.y, .calc)
				s ns = ns_$s(ns="": "", 1: " ")_calc
			}
		}
		s calc = $$op(T, ns)
	}
}

p2(x) public {
	s calc = 0
	d p2helper(.x, .calc)
	return calc
}
readInput(input, result) PUBLIC {
	s m("0") = "0000"
	s m("1") = "0001"
	s m("2") = "0010"
	s m("3") = "0011"
	s m("4") = "0100"
	s m("5") = "0101"
	s m("6") = "0110"
	s m("7") = "0111"
	s m("8") = "1000"
	s m("9") = "1001"
	s m("A") = "1010"
	s m("B") = "1011"
	s m("C") = "1100"
	s m("D") = "1101"
	s m("E") = "1110"
	s m("F") = "1111"

	set file = ##class(%Stream.FileCharacter).%New()
	s sc = file.LinkToFile(input)
	s line = $translate(file.ReadLine(), $c(13))
	s result = ""
	for i=1:1:$l(line) {
		s result = result_m($e(line, i))
	}
}