ROUTINE AoC2020Day19

Start() PUBLIC {
	s input="/irisdev/app/inputs/input19.txt"
    s input2="/irisdev/app/inputs/input19p2.txt"
	d readInput(input, input2, .rules, .strings, .a, .b)

    s ans1=$$p1(.rules, .strings, a, b)
    s ans2=$$p1(.rules, .strings, a, b, 1)

	return ans1_"^"_ans2
}

match(string, rules, pattern, a, b) PUBLIC {
    if pattern="" {
        return string=""
    }
    s curr = $p(pattern, " ", 1)
    s pattern = $p(pattern, " ", 2, *)

    if (curr=a) || (curr=b) {
        s val=$o(rules(curr, ""))
        return ($e(string, 1)=val) && $$match($e(string, 2, *), .rules, pattern, a, b)
    } else {
        s nxt=""
        for {
            s nxt=$o(rules(curr, nxt))
            if nxt="" quit

            s matched=$$match(string, .rules, nxt_" "_pattern, a, b)
            if matched=1 {
                return 1
            }
        }
    }
    return 0
}

p1(rules, strings, a, b, p2=0) {
    s total=0
    if p2=1 {
        k rules(8)
        s rules(8, 42)=""
        s rules(8, "42 8")=""

        k rules(11)
        s rules(11, "42 31")=""
        s rules(11, "42 11 31")=""
    }

    for i=1:1:strings {
        s total=total+$$match(strings(i), .rules, "0", a, b)
    }
    return total
}

readInput(input, input2, result, result2, a, b) PUBLIC {
	set file = ##class(%Stream.FileCharacter).%New()
	s sc = file.LinkToFile(input)
    s k=0
	while 'file.AtEnd {
        s k = k+1
		s curr = $translate(file.ReadLine(), $c(13)_$c(34))
		s i=$p(curr,": "), v=$p(curr,": ",2)
        if v="a" s a=i
        if v="b" s b=i
        for j=1:1:$length(v," | ") {
            s result(i, $p(v," | ",j)) =""
        }
	}

    set file = ##class(%Stream.FileCharacter).%New()
	s sc = file.LinkToFile(input2)
    s i=0
    while 'file.AtEnd {
        s i=i+1
        s curr = $translate(file.ReadLine(), $c(13))
        s result2(i)=curr
    }
	
    s result2=i
}

