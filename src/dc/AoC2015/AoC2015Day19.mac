ROUTINE AoC2015Day19

Start() PUBLIC {
    s inputfile="/irisdev/app/inputs/2015/input19.txt"
	d readInput(inputfile, .input)
    s p1=$$p1(.input)
    s p2=$$p2(.input)
    return p1_"^"_p2
}

p1(input, time=100) PUBLIC {
    MERGE nxt = input
    for t=1:1:time {
        MERGE cur = nxt
        for i=1:1:input {
            for j=1:1:input {
                s total = 0
                for ni=i-1:1:i+1 {
                    for nj=j-1:1:j+1 {
                        
                        if ((ni=i) && (nj=j)) continue
                        if ((0 < ni) && (ni <= input) && (0 < nj) && (nj <= input)) {
                            s total=total+cur(ni, nj)
                        }
                    }
                }
                if (cur(i, j)=1) {
                    if '((total=2) || (total=3)) s nxt(i, j)=0
                }
                if (cur(i, j)=0) {
                    if (total=3) s nxt(i, j)=1
                }
            }
        }
    }
    s total=0
    for i=1:1:input {
        for j=1:1:input {
            if nxt(i, j)=1 {
                s total=total +1
            }
        }
    }
    return total
}


p2(input, time=100) PUBLIC {
    MERGE nxt = input
    s nxt(1, 1)=1, nxt(1, input)=1, nxt(input, 1)=1, nxt(input, input)=1
    for t=1:1:time {
        MERGE cur = nxt
        for i=1:1:input {
            for j=1:1:input {
                if (i=1)&&(j=1) continue
                if (i=1)&&(j=input) continue
                if (i=input)&&(j=1) continue
                if (i=input)&&(j=input) continue

                s total = 0
                for ni=i-1:1:i+1 {
                    for nj=j-1:1:j+1 {
                        
                        if ((ni=i) && (nj=j)) continue
                        if ((0 < ni) && (ni <= input) && (0 < nj) && (nj <= input)) {
                            s total=total+cur(ni, nj)
                        }
                    }
                }
                if (cur(i, j)=1) {
                    if '((total=2) || (total=3)) s nxt(i, j)=0
                }
                if (cur(i, j)=0) {
                    if (total=3) s nxt(i, j)=1
                }
            }
        }
    }
    s total=0
    for i=1:1:input {
        for j=1:1:input {
            if nxt(i, j)=1 {
                s total=total +1
            }
        }
    }
    return total
}

readInput(inputfile, input) {
	set file = ##class(%Stream.FileCharacter).%New()
	s sc = file.LinkToFile(inputfile)
	s ind = 0
	while 'file.AtEnd {
        s ind = ind + 1
        s l = $translate(file.ReadLine(), $c(13))
        s input(ind) = $LENGTH(l)
        for j=1:1:input(ind) {
            s input(ind, j)=$s($extract(l, j)="#":1, 1:0)
        }
	}
    s input = ind
}